openfollow=$HOME/work/github/prcm/open-follow CD=. filter="*.scala *.xml *.conf" {
 openfollow.conf
 project=project CD=. filter="**/*.scala **/*.sbt" {
  OpenFollowBuild.scala
  plugins.sbt
 }
 api-src-main=openfollow-api/src/main/scala/jp/prcm/openfollow/api CD=. filter="**/*.scala" {
  Authenticate.scala
  DebugAPI.scala
  DefaultAPI.scala
  FollowersAPI.scala
  FriendsAPI.scala
  FriendshipsAPI.scala
  ScalatraFilter.scala
  StatusesAPI.scala
  UsersAPI.scala
  UsersCommon.scala
 }
 worker-src-main=openfollow-worker/src/main/scala/jp/prcm/openfollow/worker CD=. filter="**/*.scala" {
  Main.scala
  ProcessorSupervisor.scala
  QueueMonitor.scala
  RootSupervisor.scala
  StopHandler.scala
  Supervisor.scala
  package.scala
 }
 common-src-main=openfollow-common/src/main/scala/jp/prcm/openfollow/common CD=. filter="**/*.scala" {
  AbstractDB.scala
  DB.scala
  InternalMainDB.scala
  TimelineDB.scala
  config/Config.scala
  entity/FollowEntry.scala
  entity/Followees.scala
  entity/Followers.scala
  entity/IdGenerator.scala
  entity/JsonEntity.scala
  entity/Service.scala
  entity/Status.scala
  entity/TimelineIndex.scala
  entity/User.scala
  log/Logger.scala
  log/MongoDBAppender.scala
  log/UpdateLogPhaseType.scala
  package.scala
  queue/Kestrel.scala
  queue/Queue.scala
  util/ManifestNotNothing.scala
  util/NotImplementedError.scala
  util/Reflection.scala
  util/ScalazArm.scala
  util/Serializer.scala
  util/Thread.scala
  util/Timer.scala
  util/Util.scala
 }
 service-src-main=openfollow-service/src/main/scala/jp/prcm/openfollow/service CD=. filter="**/*.scala" {
  DebugService.scala
  FriendshipsService.scala
  HomeTimeline.scala
  RecommendService.scala
  ServiceService.scala
  StatusesService.scala
  TimelineIndexService.scala
  UsersService.scala
  WriteBuffer.scala
 }
}

